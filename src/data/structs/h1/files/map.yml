imports:
  h1/tags/scenario:
    - ScenarioType
type_defs:
  CacheVersion:
    class: enum
    size: 4
    options:
      - name: xbox
        value: 5
        comments:
          en: >-
            The original classic Xbox version of Halo 1. This version also means
            the data _after_ the cache header is zlib compressed.
      - name: demo
        value: 6
        comments:
          en: >-
            The PC demo version. This special version is one of the reasons why
            PC retail maps will not work in the demo.
      - name: pc
        value: 7
        comments:
          en: >-
            The PC retail version of the game, ported by Gearbox, as well as its
            derivatives like H1A on Xbox and MCC stock maps.
      - name: h1a_custom
        value: 13
        comments:
          en: >-
            For MCC H1A support of custom maps.
      - name: custom_edition
        value: 609
        comments:
          en: For Halo Custom Edition maps.
  H1AFlags:
    class: bitfield
    size: 4
    bits:
      - name: use_bitmaps_map
        comments:
          en: Use the bitmaps.map resource map rather than Saber's resource system.
      - name: use_sounds_map
        comments:
          en: Use the sounds.map resource map rather than Saber's resource system.
      - name: no_remastered_sync
        comments:
          en: Has the effect of disabling the remastered graphics mode.
  Header:
    class: struct
    assert_size: 2048
    fields:
      - name: head_magic
        type: char
        count: 4
        value: "head"
        comments:
          en: >-
            Always takes the value `head`, or `1751474532` as a uint32. This
            identifies the start of the header.
      - name: cache_version
        type: CacheVersion
        comments:
          en: >-
            Identifies the cache file version, which differs by release of the game.
            This must match the game's cache file version for the map be loadable.
            Later games use additional versions, such as H2V's version `8`, which
            are omitted here.
      - name: file_size
        type: uint32
        comments:
          en: Length of the map in bytes when uncompressed.
      - name: padding_length
        type: uint32
        comments:
          en: Length of the padding after the map in bytes. Only used on Xbox.
        meta:
          xbox_only: true
      - name: tag_data_offset
        type: uint32
        comments:
          en: Offset into the file to the [tag][tags] data.
      - name: tag_data_size
        type: uint32
        comments:
          en: Length of the tag data in bytes.
      - type: pad
        size: 8
      - name: scenario_name
        type: char
        count: 32
        comments:
          en: >-
            The name of the [scenario][] tag which this map was compiled from, e.g.
            `bloodgulch`. Must match the filename, except in H1A. Null-terminated.
      - name: build_version
        type: char
        count: 32
        comments:
          en: >-
            Must match the engine version on Xbox, `01.10.12.2276`. Otherwise this
            version can represent the version of the game build the cache file is for
            or the version of the tool which compiled it (as is the case with `invader-build`).
      - name: scenario_type
        type: ScenarioType
        comments:
          en: On Xbox, this tells the game which disk cache to decompress the map into.
      - type: pad
        size: 2
      - name: checksum
        type: uint32
        comments:
          en: CRC32 checksum which verifies the integrity of BSP, model, and tag data.
      - name: h1a_flags
        type: H1AFlags
        comments:
          en: A bitfield which customizes how the cache file is treated by H1A in MCC.
      - type: pad
        size: 0x790
      - name: foot_magic
        type: char
        count: 4
        value: "foot"
        comments:
          en: >-
            Always takes the value `foot`, or `1718579060` as a uint32. This
            identifies the end of the header.
  MapCacheFile:
    class: struct
    endianness: little
    fields:
      - name: header
        type: Header
