PlayerColors:
  class: enum
  size: 1
  options:
    - name: white
      value: 0x00
    - name: black
      value: 0x01
    - name: red
      value: 0x02
    - name: blue
      value: 0x03
    - name: gray
      value: 0x04
    - name: yellow
      value: 0x05
    - name: green
      value: 0x06
    - name: pink
      value: 0x07
    - name: purple
      value: 0x0A
    - name: cyan
      value: 0x0B
    - name: cobalt
      value: 0x0C
    - name: orange
      value: 0x0D
    - name: teal
      value: 0x0E
    - name: sage
      value: 0x0F
    - name: brown
      value: 0x10
    - name: tan
      value: 0x11
    - name: maroon
      value: 0x14
    - name: salmon
      value: 0x15
    - name: random
      value: 0xFF

PlayerDetails:
  class: struct
  fields:
    - name: player name
      type: UTF-16
      size: 24
      comments:
        en: >
          The player's name, encoded as [UTF-16](https://en.wikipedia.org/wiki/UTF-16).
          Null-terminated with a maximum of 11 characters (excluding the null).
    - type: pad
      size: 0x100
    - name: player color
      type: PlayerColors
      comments:
        en: >
          Determines the player's [multiplayer armour colour][hard-coded-data#multiplayer-armor-colors].
          Defaults to `0xFF` (random).

KeyboardBindings:
  class: struct
  fields:
    - name: Escape
      type: uint16
      comments:
        en: Defaults to `0x09` (MenuBack) and is unchangeable. Hardcoded to pause the game.
    - name: F1
      type: uint16
      comments:
        en: Defaults to `0x0C` (ShowScores)
    - name: F2
      type: uint16
      comments:
        en: Defaults to `0x1B` (ShowRules)
    - name: F3
      type: uint16
      comments:
        en: Defaults to `0x1C` (ShowPlayerNames)
    - name: F4
      type: uint16
    - name: F5
      type: uint16
    - name: F6
      type: uint16
    - name: F7
      type: uint16
    - name: F8
      type: uint16
    - name: F9
      type: uint16
    - name: F10
      type: uint16
    - name: F11
      type: uint16
    - name: F12
      type: uint16
    - name: Printscreen
      type: uint16
      comments:
        en: Defaults to `0x12` (Screenshot)
    - name: ScrollLock
      type: uint16
    - name: PauseBreak
      type: uint16
    - name: Grave
      type: uint16
    - name: NumRow1
      type: uint16
    - name: NumRow2
      type: uint16
    - name: NumRow3
      type: uint16
    - name: NumRow4
      type: uint16
    - name: NumRow5
      type: uint16
    - name: NumRow6
      type: uint16
    - name: NumRow7
      type: uint16
    - name: NumRow8
      type: uint16
    - name: NumRow9
      type: uint16
    - name: NumRow0
      type: uint16
    - name: EnDash
      type: uint16
    - name: Equals
      type: uint16
    - name: Backspace
      type: uint16
    - name: Tab
      type: uint16
      comments:
        en: Defaults to `0x03` (SwitchWeapon)
    - name: Q
      type: uint16
      comments:
        en: Defaults to `0x05` (Flashlight)
    - name: W
      type: uint16
      comments:
        en: Defaults to `0x13` (MoveForward)
    - name: E
      type: uint16
      comments:
        en: Defaults to `0x02` (Action)
    - name: R
      type: uint16
      comments:
        en: Defaults to `0x0D` (Reload)
    - name: T
      type: uint16
      comments:
        en: Defaults to `0x0F` (Say)
    - name: Y
      type: uint16
      comments:
        en: Defaults to `0x10` (SayToTeam)
    - name: U
      type: uint16
    - name: I
      type: uint16
    - name: O
      type: uint16
    - name: P
      type: uint16
    - name: BracketL
      type: uint16
    - name: BracketR
      type: uint16
    - name: Backslash
      type: uint16
    - name: CapsLock
      type: uint16
    - name: A
      type: uint16
      comments:
        en: Defaults to `0x15` (MoveLeft)
    - name: S
      type: uint16
      comments:
        en: Defaults to `0x14` (MoveBackward)
    - name: D
      type: uint16
      comments:
        en: Defaults to `0x16` (MoveRight)
    - name: F
      type: uint16
      comments:
        en: Defaults to `0x04` (MeleeAttack)
    - name: G
      type: uint16
      comments:
        en: Defaults to `0x01` (SwitchGrenade)
    - name: H
      type: uint16
      comments:
        en: Defaults to `0x11` (SayToVehicle)
    - name: J
      type: uint16
    - name: K
      type: uint16
    - name: L
      type: uint16
    - name: SemiColon
      type: uint16
    - name: Apostrophe
      type: uint16
    - name: Enter
      type: uint16
      comments:
        en: Defaults to `0x08` (MenuAccept). Keyboard only and unchangeable.
    - name: ShiftL
      type: uint16
    - name: Z
      type: uint16
      comments:
        en: Defaults to `0x0B` (ScopeZoom)
    - name: X
      type: uint16
      comments:
        en: Defaults to `0x0E` (ExchangeWeapon)
    - name: C
      type: uint16
    - name: V
      type: uint16
    - name: B
      type: uint16
    - name: N
      type: uint16
    - name: M
      type: uint16
    - name: Comma
      type: uint16
    - name: Period
      type: uint16
    - name: Slash
      type: uint16
    - name: RShift
      type: uint16
    - name: LCtrl
      type: uint16
      comments:
        en: Defaults to `0x0A` (Crouch)
    - name: LWin
      type: uint16
    - name: LAlt
      type: uint16
    - name: Space
      type: uint16
      comments:
        en: Defaults to `0x00` (Jump)
    - name: RAlt
      type: uint16
    - name: RWin
      type: uint16
      comments:
        en: Unchangeable
    - name: Menu
      type: uint16
      comments:
        en: Unchangeable
    - name: RCtrl
      type: uint16
    - name: UpArrow
      type: uint16
    - name: DownArrow
      type: uint16
    - name: LeftArrow
      type: uint16
    - name: RightArrow
      type: uint16
    - name: Insert
      type: uint16
    - name: Home
      type: uint16
    - name: PgUp
      type: uint16
    - name: Delete
      type: uint16
    - name: End
      type: uint16
    - name: PgDown
      type: uint16
    - name: NumLock
      type: uint16
      comments:
        en: Unchangeable
    - name: KPDivide
      type: uint16
    - name: KPMultiply
      type: uint16
    - name: Keypad0
      type: uint16
    - name: Keypad1
      type: uint16
    - name: Keypad2
      type: uint16
    - name: Keypad3
      type: uint16
    - name: Keypad4
      type: uint16
    - name: Keypad5
      type: uint16
    - name: Keypad6
      type: uint16
    - name: Keypad7
      type: uint16
    - name: Keypad8
      type: uint16
    - name: Keypad9
      type: uint16
    - name: KeypadMinus
      type: uint16
    - name: KeypadPlus
      type: uint16
    - name: Unknown1
      type: uint16
      comments:
        en: Probably KeyPadEnter
    - name: KeypadDecimal
      type: uint16
    - name: Unknown2
      type: uint16
    - name: Unknown3
      type: uint16
    - name: Unknown4
      type: uint16
    - name: Unknown5
      type: uint16
    - name: Unknown6
      type: uint16

MouseBindings:
  class: struct
  fields:
    - name: Left Button
      type: uint16
    - name: Middle Button
      type: uint16
    - name: Right Button
      type: uint16
    - name: Button 4
      type: uint16
    - name: Button 5
      type: uint16
    - name: Button 6
      type: uint16
    - name: Button 7
      type: uint16
    - name: Button 8
      type: uint16
    - name: Horizontal Axis -
      type: uint16
    - name: Horizontal Axis +
      type: uint16
    - name: Vertical Axis -
      type: uint16
    - name: Vertical Axis +
      type: uint16
    - name: Wheel -
      type: uint16
    - name: Wheel +
      type: uint16

GamepadButtonBindings:
  class: struct
  fields:
    - name: Button0
      type: uint16
      comments:
        en: DirectInput Button 0 (Face - button A)
    - name: Button1
      type: uint16
      comments:
        en: DirectInput Button 1 (Face - button B)
    - name: Button2
      type: uint16
      comments:
        en: DirectInput Button 2 (Face - button X)
    - name: Button3
      type: uint16
      comments:
        en: DirectInput Button 3 (Face - button Y)
    - name: Button4
      type: uint16
      comments:
        en: DirectInput Button 4 (Shoulder - left bumper)
    - name: Button5
      type: uint16
      comments:
        en: DirectInput Button 5 (Shoulder - right bumper)
    - name: Button6
      type: uint16
      comments:
        en: DirectInput Button 6 (Home - back)
    - name: Button7
      type: uint16
      comments:
        en: DirectInput Button 7 (Home - start)
    - name: Button8
      type: uint16
      comments:
        en: DirectInput Button 8 (Analogue - left stick - click)
    - name: Button9
      type: uint16
      comments:
        en: DirectInput Button 9 (Analogue - right stick - click)
    - name: Button10
      type: uint16
      comments:
        en: DirectInput Button 10
    - type: pad
      size: 0x2A

GamepadAxisBindings:
  class: struct
  fields:
    - name: Axis1Pos
      type: uint16
      comments:
        en: DirectInput Axis 1 (Analogue - left stick - down)
    - name: Axis1Neg
      type: uint16
      comments:
        en: DirectInput Axis 1 (Analogue - left stick - up)
    - name: Axis2Pos
      type: uint16
      comments:
        en: DirectInput Axis 2 (Analogue - left stick - right)
    - name: Axis2Neg
      type: uint16
      comments:
        en: DirectInput Axis 2 (Analogue - left stick - left)
    - name: Axis3Pos
      type: uint16
      comments:
        en: DirectInput Axis 3 (Analogue - right stick - down)
    - name: Axis3Neg
      type: uint16
      comments:
        en: DirectInput Axis 3 (Analogue - right stick - up)
    - name: Axis4Pos
      type: uint16
      comments:
        en: DirectInput Axis 4 (Analogue - right stick - right)
    - name: Axis4Neg
      type: uint16
      comments:
        en: DirectInput Axis 4 (Analogue - right stick - left)
    - name: Axis5Pos
      type: uint16
      comments:
        en: DirectInput Axis 5 (Shoulder - trigger - left)
    - name: Axis5Neg
      type: uint16
      comments:
        en: DirectInput Axis 5 (Shoulder - trigger - right)
    - name: Axis6Pos
      type: uint16
      comments:
        en: DirectInput Axis 6+
    - name: Axis6Neg
      type: uint16
      comments:
        en: DirectInput Axis 6-
    - type: pad
      size: 0x68

GamepadDirPadBindings:
  class: struct
  fields:
    - name: DirPadUp
      type: uint16
      comments:
        en: Directional - up
    - type: pad
      size: 2
    - name: DirPadRight
      type: uint16
      comments:
        en: Directional - right
    - type: pad
      size: 2
    - name: DirPadDown
      type: uint16
      comments:
        en: Directional - down
    - type: pad
      size: 2
    - name: DirPadLeft
      type: uint16
      comments:
        en: Directional - left
    - type: pad
      size: 0xF2

GamepadBindings:
  class: struct
  fields:
    - name: gamepad buttons
      type: GamepadButtonBindings
      count: 4
    - type: pad
      size: 0x10
    - name: gamepad axis set
      type: GamepadAxisBindings
      count: 4
    - name: gamepad dpad buttons
      type: GamepadDirPadBindings
      count: 4

ControlSettings:
  class: struct
  fields:
    - name: invert vertical axis
      type: bool
      comments:
        en: >
          Controls if the player's vertical aiming axis controls are inverted,
          e.g. pulling the mouse _down_ aims _up_.
    - type: pad
      size: 4
    - name: keyboard bindings
      type: KeyboardBindings
      comments:
        en: >
          A mapping of 109 keyboard inputs to game functions, each a little-endian
          `uint16` (2 bytes long). The entries are ordered roughly like the rows of
          a QWERTY keyboard, with each position in the array corresponding to a
          certain input key. If a key is unbound, then that position holds the
          bytes `0x7F 0xFF`. Otherwise, bound keys store a value representing the
          game function the key is mapped to, for example `0x05 0x00` for flashlight.
    - name: mouse bindings
      type: MouseBindings
      comments:
        en: Bindings for the mouse device, similar to the keyboard structure.
    - name: gamepad bindings
      type: GamepadBindings
      comments:
        en: >
          Bindings for gamepads, similar to the keyboard structure. Supports 4
          controllers, with each controller's input groups interleaved.
    - type: pad
      size: 26
    - name: horizontal mouse sensitivity
      type: uint8
      value:
        min: 1
        max: 10
      comments:
        en: Ranges in value from 0 (minimum) to 10 (maximum).
    - name: vertical mouse sensitivity
      type: uint8
      value:
        min: 1
        max: 10
      comments:
        en: Ranges in value from 0 (minimum) to 10 (maximum).
    - name: gamepad 0 horizontal sensitivity
      type: uint8
    - name: gamepad 1 horizontal sensitivity
      type: uint8
    - name: gamepad 2 horizontal sensitivity
      type: uint8
    - name: gamepad 3 horizontal sensitivity
      type: uint8
    - name: gamepad 0 vertical sensitivity
      type: uint8
    - name: gamepad 1 vertical sensitivity
      type: uint8
    - name: gamepad 2 vertical sensitivity
      type: uint8
    - name: gamepad 3 vertical sensitivity
      type: uint8

ParticlesSettings:
  class: enum
  size: 1
  options:
    - name: off
    - name: low
    - name: high

QualityOptions:
  class: enum
  size: 1
  options:
    - name: low
    - name: medium
    - name: high

FrameRateOptions:
  class: enum
  size: 1
  options:
    - name: vsync off
    - name: vsync on
    - name: 30 FPS

VideoSettings:
  class: struct
  fields:
    - name: resolution width
      type: uint16
    - name: resolution height
      type: uint16
    - name: refresh rate
      type: uint8
      comments:
        en: Will take the literal values 59 (`0x3B`) or 60 (`0x3C`)
    - name: unknown
      type: pad
      size: 2
      comments:
        en: Has a value of `0x00 0x02`
    - name: frame rate
      type: FrameRateOptions
    - name: specular
      type: bool
    - name: shadows
      type: bool
    - name: decals
      type: bool
    - name: particles
      type: ParticlesSettings
    - name: texture quality
      type: QualityOptions
    - type: pad
      size: 1
    - name: gamma
      type: uint8
      comments:
        en: "Options: +1 (`0xD8`), +2 (`0xDF`), +3 (`0xE6`)"
    - type: pad
      size: 1

AudioSettings:
  class: struct
  fields:
    - name: master volume
      type: uint8
    - name: effects volume
      type: uint8
    - name: music volume
      type: uint8
    - name: enable EAX
      type: bool
    - name: enable hardware acceleration
      type: bool
    - name: sound quality
      type: QualityOptions
    - type: pad
      size: 1
    - name: audio variety
      type: QualityOptions

ConnectionTypes:
  class: enum
  size: 1
  options:
    - name: "56k"
    - name: dsl-low
    - name: dsl-avg
    - name: dsl-high
    - name: t1/lan

NetworkSettings:
  class: struct
  fields:
    - name: server name
      type: UTF-16
      size: 64
      comments:
        en: >
          Stores the last-used hosting server name for the "create game" menus
          (both LAN and Internet). Null-terminated with a maximum of 31 characters
          (excluding the null).
    - type: pad
      size: 0xE0
    - name: password
      type: UTF-16
      size: 18
      comments:
        en: >
          Stores the last-used hosting password for the "create game" menus
          (both LAN and Internet). Null-terminated with a maximum of 8 characters
          (excluding the null)
    - type: pad
      size: 1
    - name: max players
      type: uint8
      comments:
        en: >
          Stores the last-used max players for hosting a server. The value `0x00`
          actually corresponds to the minimum of 2 players, with `0x0E` being the
          maximum of 16.
    - type: pad
      size: 0x100
    - name: connection type
      type: ConnectionTypes
    - type: pad
      size: 1
    - name: server address
      type: UTF-16
      size: 64
      comments:
        en: >
          Stores the default server address for Direct IP connections. This value
          could contain an IP and port separated by a ":" or even a DNS host name.
          Encoded as UTF-16, null-terminated with a maximum of 31 characters
          (excluding the null).
    - name: server port
      type: uint16
      comments:
        en: Defaults to the value 2302
    - name: client port
      type: uint16
      comments:
        en: Defaults to the value 2303

GamepadInfo:
  class: struct
  fields:
    - name: gamepad name
      type: UTF-16
      size: 512
      endianness: either
      comments:
        en: >
          Stores the name of the controller device seen when configuring button
          bindings (if configured). UTF-16 String; can be little-endian
          ("Xbox Controller S via XBCD") or big-endian ("Xbox 360 Controller For Windows").
          The size of this buffer is unknown, so 512 bytes is assumed.
    - type: pad
      size: 12
      comments:
        en: This padding size is unknown and depends on the above buffer's size.
    - name: vendor ID
      type: uint16
      comments:
        en: >
          4-digit hex identifying the vendor/manufacturer of the gamepad.
          For example, `045E` is Microsoft. This would be little-endian encoded
          as `5E 04`. A list of hardware vendor IDs can be [found here](https://devicehunt.com/all-usb-vendors).
    - name: product ID
      type: uint16
      comments:
        en: >
          4-digit hex identifying the gamepad product. For example, `0289`
          (`89 02` little-endian) is the Xbox Controller S. Devices by vendor
          can be [found here (Microsoft)](https://devicehunt.com/view/type/usb/vendor/045E).
    - type: pad
      count: 6
      comments:
        en: Zeroed-out values
    - name: pidvid
      type: char
      count: 6
      comments:
        en: An ASCII string with value "PIDVID"
    - name: dupe ID
      type: uint8
      comments:
        en: >
          Distinguishes multiple gamepads with the same vendor and product ID.
          Takes the value `0x00`, then `0x01`, etc.
    - type: pad
      size: 3


Profile:
  class: struct
  endianness: little
  fields:
    - type: pad
      size: 2
    - name: player details
      type: PlayerDetails
    - type: pad
      size: 0x14
    - name: control settings
      type: ControlSettings
      comments:
        en: >
          Contains input-related settings, including mouse, keyboard, and
          gamepad bindings.
    - type: pad
      size: 0x10A
    - name: video settings
      type: VideoSettings
    - type: pad
      size: 0x100
    - name: audio settings
      type: AudioSettings
    - type: pad
      size: 0x20C
    - name: network settings
      type: NetworkSettings
    - type: pad
      size: 0x102
    - name: gamepad info
      type: GamepadInfo
      count: 4
    - type: pad
      size: 0x674
      comments:
        en: Unknown region
    - name: crc32 hash
      type: uint32
      comments:
        en: >
          The blam.sav has a CRC-32 checksum appended at the end of it. The value
          is actually stored in its complement equivalent (i.e. bitwise NOT). The
          checksum validates the data between `0x000` and `0x1FFC` - the checksum
          itself is not included! There is a relatively large amount of padding
          before this field, and it is the final 4 bytes of the file. Due to the
          complement on this field, the entire file will _always_ have a CRC of
          `0xFFFFFFFF`. Therefore the file can be verified by either comparing its
          overall CRC to `0xFFFFFFFF`, or comparing the CRC of its prior sections
          to the complement of this field.
